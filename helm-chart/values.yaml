globalImageTag: local

enableSMTPDev: true

enableIngress: true

apiKeys:
  - name: "jeff@water-bottler.local"
    key: "amVmZnMtd2F0ZXItYm90dGxlci1leGFtcGxlLWFwaS1rZXk="
    validUntil: "2036-12-31T23:59:59Z"
  - name: "ema√±uel@water-bottler.local"
    key: "ZW1hw7F1ZWwtd2F0ZXItYm90dGxlci1leGFtcGxlLWFwaS1rZXk="
    validUntil: "1982-01-01T00:00:00Z"

minio:
  accessKey: water
  accessKeySecret: bottler123
  bucketName: water-buckid

rabbitmq:
  password: bottler
  username: water

uploadService:
  configuration:
    authServiceURL: http://authentication-service.{{ .Release.Namespace }}.svc.cluster.local:8080
    queueURL: amqp://{{ .Values.rabbitmq.username }}:{{ .Values.rabbitmq.password }}@dev-cluster.{{ .Release.Namespace }}.svc.cluster.local:5672
    minioEndpoint: minio-service.{{ .Release.Namespace }}.svc.cluster.local:9000

notificationService:
  configuration:
    smtpServerURL: 
    smtpAuthUsername:
    smtpAuthPassword:
    queueURL: amqp://{{ .Values.rabbitmq.username }}:{{ .Values.rabbitmq.password }}@dev-cluster.{{ .Release.Namespace }}.svc.cluster.local:5672
    # This assumes a port forward of the download service to port 8083
    sourceURI: http://localhost:8083

downloadService:
  configuration:
    minioEndpoint: minio-service.{{ .Release.Namespace }}.svc.cluster.local:9000

objectRecognitionService:
  scaling:
    minInstances: 1
    maxInstances: 5
    # This value is super low for testing purposes
    scalingMetricThreshhold: 1
  configuration:
    queueHost: dev-cluster.{{ .Release.Namespace }}.svc.cluster.local
    delay: 0


# override for adapter
prometheus-adapter:
  prometheus:
    # TODO: This could lead to issues, maybe?
    url: http://prometheus-stack-kube-prom-prometheus.default.svc.cluster.local
    port: 9090
    path: ""

  replicas: 1

  rules:
    default: true

    custom: 
    - seriesQuery: 'rabbitmq_queue_messages_ready{container="rabbitmq"}'
      resources:
        overrides:
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}
      name:
        matches: "^(.*)_ready$"
        as: "${1}"
      metricsQuery: 'avg_over_time(<<.Series>>[5m])'

    existing:

    external: []

